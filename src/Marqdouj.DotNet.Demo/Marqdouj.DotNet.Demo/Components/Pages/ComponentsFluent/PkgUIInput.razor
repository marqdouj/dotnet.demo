@page "/pkg-components-ui-input"
@rendermode InteractiveServer

<PageTitle>Components (Fluent) - UI Input</PageTitle>

<FluentLayout>
    <PkgPageHeader Header="@subject"
                   HRefCode="@hRefCode"
                   Subject="@subject">
    </PkgPageHeader>

    <FluentTabs OnTabChange="OnTabChanged">
        <FluentTab Label="Input Controls">
            <FluentGrid>
                <FluentGridItem>
                    <FluentCard AreaRestricted="false">
                        <FluentLabel Typo="Typography.Header">UIColor</FluentLabel>
                        <p>
                            This component uses
                            <a href="@hRefCodeCss" target="_blank">HtmlColorName</a>
                            and
                            <a href="@hRefCodeUI" target="_blank">UI Models</a>
                        </p>

                        <UIColor Model="@optionsUI?.Color" />
                    </FluentCard>
                </FluentGridItem>

                <FluentGridItem>
                    <FluentCard AreaRestricted="false">
                        <FluentLabel Typo="Typography.Header">UISelect - Enum (Optional)</FluentLabel>
                        <br />
                        <UISelect Model="@optionsUI?.Alignment" Items="@alignments" />
                    </FluentCard>
                </FluentGridItem>

                <FluentGridItem>
                    <FluentCard AreaRestricted="false">
                        <FluentLabel Typo="Typography.Header">UISelect - Enum</FluentLabel>
                        <br />
                        <UISelect Model="@optionsUI?.Position" Items="@positions" />
                    </FluentCard>
                </FluentGridItem>

                <FluentGridItem>
                    <FluentCard AreaRestricted="false">
                        <FluentLabel Typo="Typography.Header">UISelect - Bool (Optional)</FluentLabel>
                        <br />
                        <UISelect Model="@optionsUI?.Visible" Items="@visibles" />
                    </FluentCard>
                </FluentGridItem>

                <FluentGridItem>
                    <FluentCard AreaRestricted="false">
                        <FluentLabel Typo="Typography.Header">UISelect - Bool</FluentLabel>
                        <br />
                        <UISelect Model="@optionsUI?.Hidden" Items="@hiddens" />
                    </FluentCard>
                </FluentGridItem>

                <FluentGridItem>
                    <FluentCard AreaRestricted="false">
                        <FluentLabel Typo="Typography.Header">UIText</FluentLabel>
                        <br />
                        <UIText Model="@optionsUI?.Description" />
                    </FluentCard>
                </FluentGridItem>

                <FluentGridItem>
                    <FluentCard AreaRestricted="false">
                        <FluentLabel Typo="Typography.Header">UIText - Numeric (Optional)</FluentLabel>
                        <br />
                        <UIText Model="@optionsUI?.Opacity" />
                        <FluentLabel>Min: @optionsUI!.Opacity.BindMin Max: @optionsUI!.Opacity.BindMax</FluentLabel>
                    </FluentCard>
                </FluentGridItem>

                <FluentGridItem>
                    <FluentCard AreaRestricted="false">
                        <FluentLabel Typo="Typography.Header">UIText - Numeric</FluentLabel>
                        <br />
                        <UIText Model="@optionsUI?.Degrees" />
                        <FluentLabel>Min: @optionsUI!.Degrees.BindMin Max: @optionsUI!.Degrees.BindMax</FluentLabel>
                    </FluentCard>
                </FluentGridItem>
            </FluentGrid>
        </FluentTab>

        <FluentTab Label="Values (UIValuesGrid)">
            <UIValuesGrid Items="@optionsUI.ToUIList()" />
        </FluentTab>
    </FluentTabs>

</FluentLayout>

@code {
    private readonly string hRefCode = HRefCodeSource.ComponentsFluent.CodeUrl("UIInput");
    private readonly string subject = "Input Controls";
    private readonly PkgInputOptionsUI optionsUI = new(){Source = new()};
    private readonly string hRefCodeCss = HRefCodeSource.Components.CodeUrl("Css");
    private readonly string hRefCodeUI = HRefCodeSource.Components.CodeUrl("UI");
    private List<Option<string>> positions = UIExtensions.GetEnumLookup<PkgInputPosition>(false);
    private List<Option<string>> alignments = UIExtensions.GetEnumLookup<PkgInputAlignment>(true);
    private List<Option<string?>> hiddens = UIExtensions.GetBoolLookup(false);
    private List<Option<string?>> visibles = UIExtensions.GetBoolLookup(true);

    private void OnTabChanged(FluentTab tab)
    {
        StateHasChanged();
    }
}
